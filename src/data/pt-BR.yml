Skip-To-Content: "Ir ao conteúdo"
Language-Settings: "Configurações de idioma"
Sidebar-Title: "Navegação do Site"
Home: "Início"
Editor: "Editor"
Download: "Download"
Donate: "Doações"
Start: "Começando"
Reference: "Referências"
Libraries: "Bibliotecas"
Learn: "Aprenda"
Examples: "Exemplos"
Books: "Livros"
Community: "Comunidade"
Contribute: "Contribua"
Forum: "Fórum"

footerxh1: "Créditos"
footer1: "p5.js foi criado por "
footer2: " e é desenvolvido por uma comunidade de colaboradores, com apoio de "
footer3: " e "
footer4: "Identidade e design gráfico por "

tagline1: "Diversão Processing x Habilidades do JavaScript"
tagline2: "Simplicidade do Processing x Flexibilidade do JavaScript"
tagline3: "Intuição do Processing x Poder do JavaScript"
tagline4: "Creatividade do Processing x Dinamismo do JavaScript"
tagline5: "Comunidade do Processing x Comunidade do JavaScript"
tagline6: "o poder do Processing x o alcance do JavaScript"

home:
  start-creating: "Comece a criar com o Editor p5!"
  p1xh1: "Olá!"
  p1x1: "p5.js é uma biblioteca Javascript para programação criativa, com o foco em tornar programação acessível e inclusiva para artistas, designers, educadores, iniciantes e qualquer outra pessoa! p5.js é grátis e de código aberto porque acreditamos que software e as ferramentas para aprendê-lo devem ser acessíveis para todos."
  p1x2: "Usando a metafora de um esboço, p5.js possui um conjunto completo de funcionalidades para desenhar. Porpem, você não está limitado à sua tela. Você pode imaginar que toda a tela do seu navegador é seu esboço, incluindo objetos HTML5 para texto, entradas, vídeos, webcam e som."
  p2xh2: "Comunidade"
  p2x1: "Nós somos uma comunidade de, e em solidariedade com, pessoas de todas as identidades de gênero e expressão, orientação sexual, raça, etnia, idioma, condição neurológica, tamanho, aptidão, classe, religião, cultura, subcultura, opinião política, idade, nível de habilidade, ocupação e histórico. Sabemos que nem todos possuem o tempo, dinheiro ou capacidade para ativamente participar, mas reconhecemos e encorajamos qualquer involvimento. Facilitamos e promovemos o acesso e empoderamento. Somos todos aprendizes."
  p2x2: "p5.js é uma interpretação do "
  p2x3: " para a web de hoje. Realizamos eventos e atuamos com o apoio da "
  p2x4: "."
  p2x5: "Aprenda mais sobre "
  p2x6: "nossa comunidade"
  p2x7: "."

  p3xh2: "Começando"
  p3xp1: "Faça seu primeiro esboço no "
  p3xp2: ". Aprenda mais sobre como desenhar com p5.js na "
  p3xp3: "Página Começando"
  p3xp4: " e tudo que você pode fazer nas "
  p3xp5: "Referências"
  p3xp6: "."

  p4xh2: "Se envolva"
  p4xp1: "Há várias formas de contribuir para o p5.js:"
  p4xp2: "Opções de Envolvimento"
  p4xp3: "SCompartilhe algo que você fez!"
  p4xp4: "Dê um workshop ou uma aula."
  p4xp5: "Organize um encontro."
  p4xp6: "Contribua para o código fonte."

  sketch_by: "por"
  sketch_info: "Esboço da página inicial adaptado do trabalho de Grace Obergfell, aluna da nona série. "
  sketch_info_link: "CC Fest NYC em 8 de Junho, um evento de programação grátis para alunos e professores"

copyright:
  copyright-title: "Informação de Direitos Autorais"
  copyright1: "A biblioteca p5.js é um software sem custos; você pode redistribuí-lo ou modifica-lo sob os termos do "
  copyright2: " como publicado pelo Free Software Foundation, versão 2.1."
  copyright3: "A Referência para o idioma está sob uma "
  copyright4: " licença que torna possível reutilizar esse conteúdo para propósitos não comerciais se for creditado."

get started:
  get-started-title: "Começando"
  get-started1: "Essa página te ajuda a configurar um projeto p5.js e a fazer seu primeiro esboço."
  get-started2: "Se quiser começar com o novo "
  get-started3: "Editor p5.js"
  get-started4: ", você pode ir direto para"
  get-started5: "Seu Primeiro Esboço"
  download-title: "Download e Configurar Arquivo"
  download1: "A forma mais fácil de começar é usando o exemplo vazio que vem com o download do "
  download2: "p5.js completo"
  download3: "."
  download4: "Se olhar no index.html, irá perceber que ele referencia o arquivo p5.js. Se quiser usar a versão minificada(comprimida para carregar mais rápido), mude a referência para p5.min.js."
  download5: "Se quiser, você também pode referenciar um arquivo p5.js online. Todas as versões do p5.js estão em uma CDN(Content Delivery Network). Você pode ver o histórico de versões aqui: "
  download6: ". Nesse caso, pode mudar a referência para:"
  download7: "A página HTML deve parecer com isso:"
  download8: "Você também pode começar com esse template do "
  download9: "."
  environment-title: "Ambient"
  environment1: "Você pode usar o "
  environmentlink: "http://en.wikipedia.org/wiki/Source_code_editor"
  environment2: " editor de texto "
  environment3: "de sua preferência. Instruções para configurar o "
  environment4: " estão logo abaixo, outras opções de editor incluem "
  environment5: " e "
  environment6: "Se você é um usuário de leitor de telas e não está usando o Editor Web de p5.js, você pode querer usar "
  environment7: " ou "
  environment8: "Abra o Sublime. Vá ao menu Arquivos e escolha Abrir... e escolha a pasta em que seus arquivos html e js se encontram. No menu à esquerda, você deve ver o nome da pasta no topo, com a lista de arquivos da pasta logo abaixo."
  environment9: "Clique no seu arquivo sketch.js e ele irá abrir à direita onde você pode edita-lo. "
  environment10: "código inicial do p5 aberto no editor sublime."
  environment11: "Abra o arquivo index.html no seu browser clickando duas vezes no gerenciador de arquivos ou digite"
  environment12: "file:///o/caminho/para/seu/arquivo/html"
  environment13: " na barra para ver seu esboço."
  your-first-sketch-title: "Seu Primeiro Esboço"
  your-first-sketch-intro1: "Usuários de Processing podem querer checar o"
  your-first-sketch-intro2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  your-first-sketch-intro3: "tutorial de transição do Processing"
  your-first-sketch-intro4: "No seu editor, digite o seguinte:"
  your-first-sketch2: 'Essa linha de código significa "desenhe uma elipse, com o centro 50 pixels acima da esquerda e 50 pixels abaixo do topo, com largura e altura de 80 pixels".'
  your-first-sketch3: "Salve seu esboço e recarregue sua página no browser. Se você digitou corretamente, verá isso aparecer na tela:"
  your-first-sketch4: "Se está usando um leitor de talas, deve ou ligar as saídas de acessibilidade no editor online de p5, ou fora do editor deve adicionar a biblioteca de acessibilidade no seu html. Para aprender sobre "
  your-first-sketch5: "como usar p5 com um leitor de telas"
  your-first-sketch6: " e para aprender mais sobre "
  your-first-sketch7: "a biblioteca de acessibilidade"
  your-first-sketch8: "canvas tem um cículo com largura e altura de 50 pixels na posição 80 x e 80 y"
  your-first-sketch9: "Se você não digitou corretamente, você pode não ver nada. Se isso acontecer, veja se copiou exatamente o código de exemlo: os números devem estar entre parenteses, possuir vírgulas entre cada um e a linha deve terminar com um ponto e vírgula."
  your-first-sketch10: 'Uma das coisas mais difíceis ao começar a programar é que a sintaxe deve ser muito específica. O browser não é sempre esperto o suficiente para saber o que você quer dizer e pode ficar um tanto confuso com o posicionamento da pontuação. Você irá se acostumar com um pouco de prática. Dependendo do browser que estiver usando, você pode ver erros no "console" do Javascript. No Chrome, por exemlo, está em View > Developer> Javascript Console.'
  your-first-sketch11: "Agora, iremos para um esboço um pouco mais divertido. Delete o texto do último exemplo e tente isso:"
  your-first-sketch12: "Esse programa cria um canvas com 640 pixels de largura e 480 pixels de altura e então começa a desenhar circulos brancos na posição do mouse. Quando um botão do mouse é apertado, o cículo muda para preto. Vamos explicar mais sobre os elementos desse programa em detalhes depois. Por agora, rode o código, mova o mouse e clique para experencia-lo."
  your-first-sketch13: "canvas tem multiplos canvas desenhados seguindo o mouse"
  first-sketch-heading1: "Trecho de código com uma elipse"
  first-sketch-heading2: "Nota para usuários de leitor de tela"
  first-sketch-heading3: "Trecho de código com interação"
  what-next-title: "E agora?"
  processing-transition1: "Leia o "
  processing-transition2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  processing-transition3: "tutorial de transições do Processing"
  processing-transition4: " para aprender a converter do Processing para p5.js e suas principais diferenças."
  reference1: "Veja a "
  reference2: " referência"
  reference3: " para a documentação completa."
  learn1: "Veja a página "
  learn2: "aprenda"
  learn3: " e a página "
  learn4: "exemplos"
  learn5: " para mais."
  learn6: "Se você deseja usar o p5 com um leitor de telas, veja o "
  learn7: "tutorial de p5 com um leitor de telas"
  book1: "Partes desse tutorial foram adaptados do livro, Getting Started with p5.js, por Lauren McCarthy, Casey Reas e Ben Fry, O'Reilly / Make. Copyright © 2015. Todos os direitos reservados."

download:
  Download: "Download"
  download-intro: 'Bem vindo! Apesar de entitulada "Download" essa página na verdade contém um conjunto de links para ou baixar a biblioteca ou começar a trabalhar com ela online. Nós tentamos organizar de forma a refletir o que um iniciante gostaria de ver primeiro até conteúdos que programadores mais experientes estariam procurando.'
  editor-title: "Editor"
  p5.js-editor: "Editor p5.js"
  p5.js-editor-intro: "Esse link irá te redirecionar para o editor online de p5.js para que possa começar a usar p5.js imediatamente."
  editor-includes: "Comece a programar usando o editor de p5.js, nenhuma configuração é necessária!"
  complete-library-title: "Biblioteca Completa"
  complete-library-intro1: "Isso é um download contendo o arquivo da biblioteca p5.js, o adicional p5.sound e um exemplo de projeto. Não contém um editor. Veja "
  complete-library-intro2: "Começando"
  complete-library-intro3: " para aprender como configurar um projeto p5.js."
  p5.js-complete: "p5.js completo"
  includes-1: "Inclui:"
  includes-2: "p5.js, p5.sound.js e um exemplo de projeto"
  includes-3: "Versão "
  single-files-title: "Arquivos Únicos"
  single-files-intro: "Esses são downloads ou links para o arquivo da biblioteca p5.js. Nenhum conteúdo adicional é incluído."
  single-file: "Arquivo Único: "
  p5.js-uncompressed: "Versão descomprimida completa"
  compressed: "Versão comprimida"
  link: "Link: "
  statically-hosted-file: "Arquivo hospedado estaticamente"
  etc-title: "Recursos do GitHub"
  older-releases: "Versões anteriores (releases antigas e changelog)"
  github-repository: "Repositório do código (GitHub)"
  report-bugs: "Reporte issues, bugs e erros"
  supported-browsers: "Browsers suportados "

  support-title: "Contribua para o p5.js!"
  support-options: "Opções de Contribuição"
  support-1: "p5.js é um software grátis e de código aberto. Queremos que nossa comunidade seja o mais aberto e inclusiva possível. Você pode contribuir para esse trabalho "
  support-2: "se tornando um membro"
  support-3: " da Fundação Processing como um indivíduo, um estúdio ou uma instituição de ensino. Você também pode "
  support-4: "fazer uma doação"
  support-5: " sem se tornar membro."
  support-6: "Individual"
  support-7: "$25"
  support-8: "Estúdio"
  support-9: "$250"
  support-10: "Instituição de ensino"
  support-11: "$5/aluno ou $500"
  support-12: "Se tornando um membro você irá contribuir para o desenvolvimento de software (para o p5.js, Processing, Processing.py, Processing for Android e dispositivos ARM, referências para aprendizado, como exemplos de código e tutoriais, "
  support-13: "Associações"
  support-14: " e "
  support-15: "eventos comunitários"
  support-16: ". Precisamos da sua ajuda!"
  support-17: "Conferência de Contribuidores p5.js no CMU STUDIO para Inquérito Criativo em Pittsburgh (Crédito da imagem: Taeyoon Choi)"
  support-18: "O companheiro do Processing Saskia Freeke está organizando workshops de Code Liberation x Processing em Londres (Créditos da Imagem: Code Liberation Foundation)"
  support-19: "Conferência Learning to Teach, Teaching to Learn com SFPC (Créditos da Imagem: Kira Simon-Kennedy)"
  support-20: "Workshop da parceira da Fundação Processing  Cassie Tarakajian no Code Art Miami (Créditos da Imagem: Christian Arévalo Photography)"
  support-21: "Taeyoon Choi e interpretador ASL no workshop Signing Coders p5.js (Cŕeditos da Imagem: Taeyoon Choi)"
  support-22: "Começo do Google Summer of Code (Créditos da Imagem: Taeyoon Choi)"
  support-23: "Workshop da parceira da Fundação Processing Cassie Tarakajian no Code Art Miami (Cŕeditos da Imagem: Christian Arévalo Photography)"
  support-24: "Luisa Pereira and Yeseul Song ajudando a facilitar um workshop de p5.js usando linguagem de sinais ministrado por Taeyoon Choi (Créditos da Imagem: Taeyoon Choi)"
  support-25: "Conferência de Contribuidores p5.js no CMU STUDIO para Inquérito Criativo em Pittsburgh (Créditos da Imagem: Taeyoon Choi)"
  support-26: "Parceiro do Processing, Digital Citizens Lab hospeda um painel sobre ensino STEM no the International Center of Photography (Créditos da Imagem: International Center of Photography)"
  support-27: "Participantes no workshop de p5.js em Santiago, Chile, ministrado por Aarón Montoya-Moraga (Créditos da Imagem: Aarón Montoya-Moraga.)"
  support-28: "Claire Kearney-Volpe ajudando em um workshop de p5.js utilizando linguagem de sinais ministrado por Taeyoon Choi (Créditos da Imagem: Taeyoon Choi)"
  support-29: "Parceiros da Fundação Processing DIY Girls ministram um programa de programação criativa em Los Angeles (Crédito das Imagens: DIY Girls)"
  support-30: "Parceiro do Processing Digital Citizens Lab"
  support-31: "Encontro p5.js em UCLA DMA e NYU ITP"
  support-32: "A Fundação Processing"
  support-33: " foi fundada em 2012 depois de uma década com o o software original do Processing. A missão da fundação é promover o aprendizado de software dentro das artes visuais e o aprendizado de artes visuais em campos relacionados à tecnologia — e tornar esses campos acessíveis para diversas comunidades. Nosso objetivo é empoderar pessoas com qualquer interesse e histórico a aprender a programar e fazer trabalhos criativos com código, especialmente aqueles que não teriam acesso a esses recursos e ferramentas."
  support-17-alt: ""
  support-18-alt: ""
  support-19-alt: ""
  support-20-alt: ""
  support-21-alt: ""
  support-22-alt: ""
  support-23-alt: ""
  support-24-alt: ""
  support-25-alt: ""
  support-26-alt: ""
  support-27-alt: ""
  support-28-alt: ""
  support-29-alt: ""
  support-30-alt: ""
  support-31-alt: ""

learn:
  learn-title: "Aprenda"
  learn1: "Esses tutoriais providenciam explicações mais a fundo ou em passo a passos em alguns tópicos. Olhe a "
  learn2: "página de exemplos"
  learn3: "para ver demonstrações curtas de tópicos váriados do p5.js"
  introduction-to-p5js-title: "Introdução ao p5.js"
  hello-p5js-title: "Olá p5.js"
  hello-p5js: "Esse curto vídeo irá te introduzir à biblioteca e o que você poderá fazer com ela."
  getting-started-title: "Começando"
  getting-started: "Bem vindo ao p5.js! <br> Essa introdução cobre os basicos de como configurar um projeto p5.js."
  p5js-overview-title: "Visão Geral do p5.js"
  p5js-overview: "Uma visão geral das principais características do p5.js."
  p5js-processing-title: "p5.js e Processing"
  p5js-processing: "As principais diferenças entre os dois e como converter um no outro."
  p5-screen-reader-title: "p5 com um leitor de telas"
  p5-screen-reader: "Configurando o p5 para que possa ser utilizado facilmente com um leitor de telas."
  using-local-server-title: "Usando um servidor local"
  using-local-server: "Como configurar um servidor local no Mac OSX, Windows ou Linex."
  p5js-wiki-title: "Wiki p5.js"
  p5js-wiki: "Documentação adicional e tutoriais contribuídos pela comunidade."
  connecting-p5js-title: "Conectando o p5.js"
  creating-libraries-title: "Criando bibliotecas"
  creating-libraries: "Criando bibliotecas adicionais para o p5.js."
  nodejs-and-socketio-title: "node.js e socket.io"
  nodejs-and-socketio: "Usando um servidor node.js com p5.js uando comunicação via socket.io."
  programming-topics-title: "Tópicos de Programação"
  beyond-the-canvas-title: "Além do canvas"
  beyond-the-canvas: "Criando e manipulando elementos na página além do canvas."
  3d-webgl-title: "3D/WebGL"
  3d-webgl: "Desenvolvendo aplicações com gráficos avançados usando o modo WEBGL."
  color-title: "Cores"
  color: "Uma introdução à cores digitais."
  coordinate-system-and-shapes-title: "Sistema de Coordenadas e Formas"
  coordinate-system-and-shapes: "Desenhando formas simples e usando o sistema de coordenadas."
  interactivity-title: "Interatividade"
  interactivity: "Introdução à interatividade usando o mouse e o teclado."
  program-flow-title: "Fluxo do Programa"
  program-flow: "Introdução ao controle de fluxos em um programa p5.js."
  curves-title: "Curvas"
  curves: "Uma introdução aos três tipos de curva presentes no p5.js: arcosAn introduction to the three types of curves in p5.js: arcs, curvas spline e curvas de Bézier."
  becoming-a-better-programmer-title: "Se tornando um programador melhor"
  debugging-title: "Debugando"
  debugging: "Um guia de como debugar para todos."
  optimizing-title: "Otimizando o código p5.js para desempenho"
  optimizing: "Um tutorial com dicas e truques para otimizar seu código para faze-lo rodar mais rápido e mais suave."
  test-driven-development-title: "Teste Unitário e Desenvolvimento orientado à Testes"
  test-driven-development: "Se salve da agonia no dia de instalação. O que é teste unitário e como usa-lo? Por Andy Timmons."
  contributing-to-the-community-title: "Contribuindo para a comunidade"
  development-title: "Desenvolvimento"
  development: "Começando e visão geral de como contribuir para o desenvolvimento."
  looking-inside-title: "Por dentro do p5"
  looking-inside: "Uma introdução amigável para a estrutura de arquivos e ferramentas para desenvolvimento com p5.js, por Luisa Pereira."
  writing-tutorial-title: "Escrevendo um tutorial"
  writing-tutorial: "Um guia de como escrever tutoriais de programação para p5.js."
  writing-a-tutorial-title: "Guia para contribuir em tutoriais de p5.js"
  writing-a-tutorial-author: "Esse tutorial foi escrito por Tega Brain."
  writing-a-tutorial-1: "Nós convidamos educadores, contribuidores e entusiastas para contribuir para tutoriais de p5.js. O projeto p5js torna programação criativa e desenvolvimento de código aberto mais acessível para uma comunidade diversa e estamos animados para publicar tutoriais em todos os aspectos do processo de desenvolvimento. Nossos materiais de aprendizado, até agora, incluem guias em como aprender p5, técnicas de programação e como contribuir para um projeto de código aberto."
  writing-a-tutorial-2: "Nós damos as boas vindas à novas contribuições de tutoriais escritos e esse guia mostra os passos a seguir para, propor, preparar e contribuir."
  writing-a-tutorial-how-start-title: "Como começar:"
  writing-a-tutorial-how-start-1: "Veja se sua proposta de tópico já não foi coberta. Tem "
  writing-a-tutorial-how-start-2: "uma planilha aqui"
  writing-a-tutorial-how-start-3: "que mostra os tutoriais que estão em progresso. Se seu tópico está listado como em progresso, talvez você possa adicionar mais à trabalhos sendo realizados e contribuir para preparar trabalhos existentes para publicação, então por favor entre em contato conosco."
  writing-a-tutorial-how-start-4: "Se seu tópico não foi coberto ainda e não está listado como em progresso, por favor escreva algumas sentenças sobre o que você porpõe cobrir e nos mande um email com essa descrição em education@p5js.org."
  writing-a-tutorial-how-prepare-title: "Como preparar um tutorial de p5js para publicação online:"
  writing-a-tutorial-how-prepare-1: "Quando seu tutorial estiver pronto para publicação, por favor sigua esses passos para preparar seu conteúdo para o site do p5js."
  writing-a-tutorial-how-prepare-2: "Prepare o conteúdo do seu tutorial como um arquivo nome-do-tutorial.hbs com "
  writing-a-tutorial-how-prepare-3: "essa estrutura básica"
  writing-a-tutorial-how-prepare-4: ". Como mostrado nesse arquivo, ele deve conter um cabeçalho como mostrado abaixo:"
  writing-a-tutorial-how-prepare-5: "A pasta contendo seu tutorial será colocada na pasta 'tutorials' do site do p5js. O arquivo chamado index.hbs é "
  writing-a-tutorial-how-prepare-6: "a página de destino dos tutoriais de p5.js"
  writing-a-tutorial-how-prepare-7: " e o arquivo test-tutorial.hbs é o tutorial de teste."
  writing-a-tutorial-how-prepare-8: "Todo conteúdo deve ir nas tags:"
  writing-a-tutorial-how-prepare-9: " da página, com formatação definida pelas tags &lt;h1&gt; e &lt;h2&gt; a tag de parágrafo &lt;p&gt; é feita como mostra a "
  writing-a-tutorial-how-prepare-10: "página de tutorial teste."
  writing-a-tutorial-how-prepare-11: "Se seu tutorial contém imagens, elas devem ser colocadas na pasta assets do site do p5js, em src/assets/learn/test-tutorial/images como mostrado abaixo."
  writing-a-tutorial-how-prepare-12: "Para formatar corretamente o código no html da página use a tag:"
  writing-a-tutorial-embedding-title: "Incorporando esboços de p5.js"
  writing-a-tutorial-embedding-1: "Usar p5js significa que você pode ilustrar seu tutorial com exemplos de código animados, interativos ou editáveis para demosntrar conceitos de programação. Seus exemplos devem estar preparados como esboços p5.js e podem ser incorporados de duas formas."
  writing-a-tutorial-embedding-2: "Se o exemplo deve ser editável como nas "
  writing-a-tutorial-embedding-3: "páginas de referência"
  writing-a-tutorial-embedding-4: " do site do p5js, o esboço deve ser incorporado na página html usando o widget de p5js. Siga "
  writing-a-tutorial-embedding-5: "esse guia "
  writing-a-tutorial-embedding-6: "sobre como incorporar esboços de p5js usando o widget escrito por "
  writing-a-tutorial-embedding-7: ". Você também pode ver isso em ação na"
  writing-a-tutorial-embedding-8: " página de tutorial teste"
  writing-a-tutorial-embedding-9: "."
  writing-a-tutorial-embedding-10: "Se o exemplo deve ser animado e/ou interativo mas não editável. O esboço de p5.js deve ser incorporado como um iframe, como descrito abaixo."
  writing-a-tutorial-iframe-title: "Incorpore um esboço de p5 usando um iframe"
  writing-a-tutorial-iframe-1: "Um iframe é como criar uma janela em que você pode ver outra página, que não faz parte do resto da sua página. Nessa caso será uma janela pro index.html que contém seu esboço p5.js. "
  writing-a-tutorial-iframe-2: "Coloque seus esboços na pasta /src/assets/learn do site, em uma pasta com o nome do seu esboço como mostra a imagem. Esse é  lugar onde todas as imagens e esboços de p5 linkados por iframe devem estar."
  writing-a-tutorial-iframe-3: "Nas subpastas contendo seus exemplos de p5 deve haver um arquivo sketch.js e o arquivo html incorporado pelo esboço. "
  writing-a-tutorial-iframe-4: 'Tenha certeza que seu arquivo embed.html tem os caminhso corretos para as bibliotecas p5 do site. Se sua estrutura de arquivos é a mesma da acima, o caminho para a biblioteca p5.js deve ser "../../../js/p5.min.js".'
  writing-a-tutorial-iframe-5: "Você pode então incorporar os arquivos index como iframes no arquivo .hbs que contém o conteúdo do seu tutorial. O código incorporado para o iframe deve então ser: "
  writing-a-tutorial-iframe-6: "Estilo para o iframe (pode ser colocado direto no tutorial ou em um stylesheet):  "
  writing-a-tutorial-iframe-7: "Aqui você pode ver o esboço rodando: "
  writing-a-tutorial-iframe-8: "E aqui está incorporado no site do p5 usando o código abaixo:  "
  writing-a-tutorial-iframe-9: "Uma coisa para notar é que você deve colocar manualmente o tamanho do iframe para que funcione melhor se as coisas estiverem em um tamanho padrão."
  writing-a-tutorial-iframe-10: "Note também que os links para os arquivos de bibliotecas p5.js não acontecem na página .hbs com todo o conteúdo do tutorial. Em vez disso serão colocados na página html que está renderizando seu esboço (nesse caso chamado embed.html)."
  writing-a-tutorial-iframe-11: "Mais informações sobre incorporar esboços p5.js podem ser encontrados "
  writing-a-tutorial-embed-iframe-12: "aqui."
  writing-a-tutorial-finishing-title: "Terminando"
  writing-a-tutorial-finishing-1: "Quando tiver terminado de escrever seu tutorial e seu conteúdo foi aprovado. Faça um fork do repositório do site do p5.js para que possa publicar sua contribuição!"
  writing-a-tutorial-finishing-2: "Obrigado!"
  color-description1: "Esse tutorial é do livro Learning Processing por Daniel Shiffman, publicado por Morgan Kaufmann, © 2008 Elsevier Inc. Todos direitos reservados. O porte para p5 foi feito por Kelly Chang. Se ver algum erro ou tiver algum comentário, "
  color-description2: " por favor nos informe."
  color-p1x1: 'No mundo digital, quando queremos falar sobre uma cor, precisão é necessária. Falara "Ei, você pode fazer esse circulo ser um verde azulado?" não vai funcionar. Cor, no lugar disso, é definido como um intervalo de números. Vamos começar com o caso mais simples: preto e branco ou tons de cinza. 0 significa preto, 255 signfica branco. No meio, qualquer outro número—50, 87, 162, 209 e outros—são um tom de cinza entre preto e branco.'
  color-p2x1: "Adicionando as funções "
  color-p2x2: " e "
  color-p2x3: " antes de algo ser desenhado, nós podemos dar a cor de qualquer forma fornecida. Também existe a função "
  color-p2x4: ", que dá a cor de fundo da tela. Aqui está um exemplo."
  color-code1: "background(255);    // Deixando o fundo branco \n stroke(0);          // Deixando as linhas pretas \n fill(150);          // Deixando o interior de uma forma cinza \n rect(50,50,75,100); // Desenhando o retangulo"
  color-p3x1: "Linhas ou preenchimento podem ser eliminados com as funções: "
  color-p3x2: " e "
  color-p3x3: '. Nosso instinto pode ser dizer "stroke(0)" para eliminar as linhas, mas é importante lembrar que 0 não é "nada", mas sim a cor preta. Além disso, lembre de não elimitar os dois—com '
  color-p3x4: " e "
  color-p3x5: ", nada irá aparecer!"
  color-p4x1: "Além disso, se desenharmos duas formas, o p5.js irá sempre usar as linhas e preenchimentos especificados mais recentemente, lendo o código de cima pra baixo."
  color-rgb-title: "Cores RGB"
  color-rgb-p1x1: 'Lembra de desenhar com os dedos? Misturando três cores "primarias", qualquer cor pode ser feita. Misturando todas as cores juntas acabam fazendo um marrom, como lama. Quanto mais tinta você adiciona, mais escuro fica. Cores digitais também são construídas misturando três cores primárias, mas funciona de uma forma diferente de tinta. Primeiro, as primárias são diferentes: vermelho, verde e azul (i.e., cores "RGB"). E com cores na tela, você está misturando luz, não tinta, então as regras de mistura são diferentes também.'
  color-rgb-li1: "Vermelho + Verde = Amarelo"
  color-rgb-li2: "Vermelho + Azul = Roxo"
  color-rgb-li3: "Verde + Azul = Ciano (azul-esverdeado)"
  color-rgb-li4: "Vermelho + Verde + Azul = Branco"
  color-rgb-li5: "Sem cores = Preto"
  color-rgb-p2x1: 'Isso assume que todas as cores são o mais forte possível, mas claro, você tem um intervalo de cores disponível, então um pouco de vermelho com um pouco de verde mais um pouco de azul é cinza e um pouco de vermelho com um pouco de azul é roxo escuro. Enquanto isso pode levar um pouco pra se acostumar, quanto mais você programar e experimentar com cores RGB, mais instintivo vai se tornar, parecido com misturar cores com seus dedos. E claro, você não pode dizer "Misture um pouco de vermelho com um pouco de azul", você tem que providenciar a quantidade exata. Assim como nos tons de cinza, os elementos individuais de cor são expressos como intervalos de 0 (nada dessa cor) a 255 (o máximo possível) e elas estão listadas na ordem R (Vermelho), G (Verde), B (Azul). Você vai pegar o jeito experimentando, mas agora vamos mostrar um pouco de código usando algumas cores comuns.'
  color-transparency-title: "Transparência das Cores"
  color-transparency-p1x1: 'Além dos componentes vermelho, verde e azul de cada cor, também existe um quarto elemento opcional, conhecido como o "alpha" da cor. Alpha significa transparência e é particularmente útil quando você quer desenhar elementos em que você consegue ver atravéz. Os valores de alpha de uma imagem são as vezes chamados como o "canal alpha" de uma imagem.'
  color-transparency-p2x1: 'É importante perceber que pixels não são literalmente transparentes, é apenas uma ilusão conveniente que acontece ao misturar cores. Por trás das cortinas o p5.js pega os números das cores e adiciona uma porcentagem de um para uma porcentagem de outro, criando a percepção óptica de mistura. (Se você está interessado em programar vidros "cor de rosa", aqui é onde você iria começar.)'
  color-transparency-p3x1: "Valores alpha também vão de 0 a 255, com 0 sendo completamente transparente (i.e., 0% opaco) e 255 completamente opaco (i.e., 100% opaco)."
  color-custom-ranges-title: "Intervalos de Cor Customizados"
  color-custom-ranges-p1x1: "Cores RGB com intervalos de 0 a 255 não são a única forma de trabalhar com cores no p5.js, na verdade, ele permite que a gente pense sobre cor da forma que quisermos. Por exemplo, você pode preferir pensar em cores como um intervalo de 0 a 100 (como uma porcentagem). Você pode fazer especificando um modelo customizado usando "
  color-custom-ranges-p2x1: 'A função acima diz: "OK, queremos pensar nas cores em termos de vermelho, verde e azul. O intervalo dos valores RGB serão de 0 a 100."'
  color-custom-ranges-p3x1: "Porpem é raramente conveniente fazer isso, você também pode ter intervalos diferentes pra cada cor:"
  color-custom-ranges-p4x1: 'Agora estamos dizendo "Valores de vermelho vão de 0 a 100, verde de 0 a 500, azul de 0 a 10 e alpha de 0 a 255."'
  color-custom-ranges-p5x1: "Finalmente, apesar de provavelmente você usar RGB pr tudo que precisar, você também pode especificar cores usando o modo HSB (Tom, Saturação e brilho). Sem entrar em muitos detalhes, cores HSB funcionam assim:"
  color-custom-ranges-li1x1: "Tom"
  color-custom-ranges-li1x2: "—O tipo de cor, vai de 0 a 255 por padrão."
  color-custom-ranges-li2x1: "Saturação"
  color-custom-ranges-li2x2: "—A vibração da cor, vai de 0 a 255 por padrão."
  color-custom-ranges-li3x1: "Brilho"
  color-custom-ranges-li3x2: "—O brilho da cor, vai de 0 a 255 por padrão."
  color-custom-ranges-p6x1: "Com "
  color-custom-ranges-p6x2: " você pode colocar seus próprios intervalos nesses valores. Alguns preferem um intervalo de 0 a 360 pro tom (pense como os 360 graus de um círculo cromático) e de 0 a 100 pra saturação e brilho (pense como 0-100%)."
  coordinate-system-description1: "Esse tutorial é do livro "
  coordinate-system-description2: "Learning Processing"
  coordinate-system-description3: " por Daniel Shiffman, publicado por Morgan Kaufmann, © 2008 Elsevier Inc. Todos direitos reservados. O porte para p5.js foi feito por Alex Yixuan Xu. Se você ver qualquer erro ou tiver qualquer comentário, por favor "
  coordinate-system-description4: "entre em contato"
  coordinate-system-description5: "."
  coordinate-system-description-title: "Sistema de Cordenadas e Formas"
  coordinate-system-description-p1x1: "Antes de começar a programar com p5, devemos primeiro canalizar nosso eu da oitava série, pegue um pedaço de papel milimetrado e faça uma linha. O menor caminho entre dois pontos é a boa e velha linha, e é aí que começamos, com dois pontos nesse papel."
  coordinate-system-description-p2x1: 'A figura acima mostra uma linha entre o ponto A (1, 0) e o ponto B (4, 5). Se você queria direcionar um amigo seu à desenhar essa mesma linha, você diria pra ele "faça uma linha do ponto um-zero para o ponto quatro-cinco por favor." Por enquanto imagine que seu amigo tem um computador e você queria dar as instruções para ele fazer a mesma linha na tela. O mesmo comando se aplica (mas dessa vez você pode pular as gentilezas e será necessário usar uma formatação precisa). Aqui as instruções vão parecer com isso:'
  coordinate-system-description-p3x1: 'Mesmo sem estudar a sintaxe do código, a afirmação acima deve fazer bastante sentido. Estamos usando um comando (que iremos chamar de função) para a máquina seguir, chamada "line". Além disso estamos especificando argumentos para como essa linha deve ser desenhada, do pontos A (1,0) para o ponto B (4,5). Se você pensar que essa linha de código é uma frase, a função é um verbo e os argumentos são os objetos da frase. O código deve terminar em um ponto e vírgula em vez de vírgula.'
  coordinate-system-description-p4x1: 'A chave aqui é perceber que a tela do computador num é nada mais que um pedaço de papel mais extravagante. Cada pixel da tela é uma cordenada - dois números, um "x" (horizontal) e um "y" (vertical) - isso determina a posição desse ponto no espaço. E é nosso trabalho especificar que formas e cores devem aparecer nessas coordenadas.'
  coordinate-system-description-p5x1: 'Mesmo assim, há uma diferença. O gráfico de papel da oitava série ("sistema de cordenadas Cartesiano") tinha (0, 0) no centro, com o eixo y apontando pra cima e o eixo x apontando pra direita (na posição positiva, negativo pra baixo e pra esquerda). O sistema de cordenadas para pixels na tela de um computador no entanto é o inverso no eixo y. (0,0) se encontra no canto superior esquerdo com a posição positiva para a direita horizontalmente e para baixo verticalmente.'
  coordinate-system-simple-shapes-title: "Formas Simples"
  coordinate-system-simple-shapes-p1x1: "A maioria dos exemplos de programação que você vai verá com p5 são visuais por natureza. Esses exemplos envolvem desenhar formas e colocar pixels. Vamos começar vendo quatro formas primitivas."
  coordinate-system-simple-shapes-p2x1: "Pra cada forma , vamos perguntar pra nós mesmos que informações são necessárias pra especificar a localização e tamanho (e depois cor) dessa forma e aprender como o p5 espera receber essa informação. Em cada diagrama abaixo, vamos assumir uma janlea com largura e altura de 100 pixels."
  coordinate-system-simple-shapes-p3x1: "Um "
  coordinate-system-simple-shapes-p3x2: " é a forma mais fácil e um bom lugar pra começar. Pra desenhar um ponto só precisamos de uma ccordenada x e uma y."
  coordinate-system-simple-shapes-p4x1: "Uma "
  coordinate-system-simple-shapes-p4x2: " não é muito difícil também e só precisa de dois pontos: (x1,y1) e (x2,y2):"
  coordinate-system-simple-shapes-p5x1: "Agora que vamos desenhar um "
  coordinate-system-simple-shapes-p5x2: ", as coisas começam a ficar um pouco mais complicadas. Em p5, um retângulo é definido pela coordenada do canto superior esquerdo do retângulo, assim como sua largura e altura."
  coordinate-system-simple-shapes-p6x1: "Uma segunda forma de desenhar um retângulo envolve especificar o ponto central, junto da largura e altura. Se preferirmos esse método, precisamos primeiro indicar que queremos usar o modo "
  coordinate-system-simple-shapes-p6x2: " antes de dar as instruções do próprio retâmgulo. Note que p5 diferencia maiúsculo de minúsculo."
  coordinate-system-simple-shapes-p7x1: "Por último, podemos desenhar um retângulo com dois pontos também (o ponto superior esquerdo e o ponto inferior direito). O modo aqui é "
  coordinate-system-simple-shapes-p7x2: ". Note que esse exemplo possui o mesmo resultado na tela que o exemplo acima."
  coordinate-system-simple-shapes-p8x1: "Quando ficarmos confortáveis com o conceito de desenhar um retângulo, uma "
  coordinate-system-simple-shapes-p8x2: " é uma moleza. Na verdade, é identico ao "
  coordinate-system-simple-shapes-p8x3: " com a diferença sendo que uma ellipse é desenhada onde seriam as bordas do retângulo. O modo padrão para a "
  coordinate-system-simple-shapes-p8x4: " é "
  coordinate-system-simple-shapes-p8x5: ", em vez de "
  coordinate-system-simple-shapes-p8x6: "."
  coordinate-system-simple-shapes-p9x1: "Agora vamos olhar um código com formas de uma maneira mais complexa, com a dimensão do canvas de 200 por 200 . Note o uso da função createCanvas() para especificar a largura e altura do canvas."

test-tutorial:

libraries:
  Libraries: "Bibliotecas"
  core-libraries: "Bibliotecas Principais"
  community-libraries: "Bibliotecas da Comunidade"
  libraries-created-by: "Criado por:"
  p5.sound: "p5.sound extende o p5 com funcionalidades de áudio para a Web, incluindo entrada de áudio, playback, análise e síntese."
  p5.accessibility: "p5.accessibility deixa o canvas do p5 mais acessível para pessoas cegas e com deficiência visuais."
  asciiart: "p5.asciiart é um simples convertor de imagem para ASCII para p5js."
  p5.ble: "Uma biblioteca Javascript que permite comunicação entre dispositivos BLE e esboços de p5.js."
  blizard.js: "uma biblioteca para tornar a manipulação de DOM simples."
  p5.bots: "Com p5.bots você pode interagir com seu Arduino (ou outro microprocessador) a partir do seu browser. Use informações de um sensor para desenhar um esboço; use um esboço para ligar LEDs, motores e mais! Criado por "
  p5.clickable: "Biblioteca de botões, orientado a eventos e fáceis de usar para p5.js."
  p5.cmyk.js: "CMYK ColorSpace"
  p5.collide2D: "p5.collide2D disponibiliza ferramentas para calcular detecção de colisões para geometria 2D com p5.js."
  p5.createloop: "Cria loops de animação com barulho e exporte GIFs com uma linha de código."
  p5.dimensions: "p5.dimensions extende as funções de vetor do p5.js para trabalhar em qualquer quantidade de dimensões."
  p5.EasyCam: "SimplescControle de câmeras 3D, com movimento, zoom e rotação. Principais contribuições por Thomas Diewald."
  p5.experience: "Extensa biblioteca para p5.js que adiciona funcionalidades de escuta de eventos adicionais para criar aplicações web baseadas em canvas."
  p5.func: "p5.func é uma extensão que fornece novos objetos e utilidades para geração de funções em domínios de tempo, frequênia e espaço."
  p5.geolocation: "p5.geolocation fornece técnicas para obter, observar, calcular e provides techniques for acquiring, watching, calculating, and geofence localização de usuários para p5.js."
  p5.gibber: "p5.gibber fornece rápido sequenciamento musical e capacidades de síntese de áudio."
  grafica.js: "grafica.js permite que você adicione simples, mas altamente configuráveis gráficos 2D para seus esboços de p5.js."
  p5.gui: "p5.gui gera uma interface gráfica para seus esboços p5.js."
  p5.localmessage: "p5.localmessage fornece uma simples interface para enviar mensagens localmente de um esboço para outro para tornar esboços em multiplas telas simples."
  marching: "Conversão de Raster para Vetor."
  mappa: "Mappa fornece um conjunto de ferramentas para trabalhar com mapas estáticos, mapas de quadros e geo-data. Útil para construir representações visuais baseadas em geolocalização."
  ml5.js: "ml5.js contruído em cima do Tensorflow.js e fornece acesso amigável para alogritmos e modelos de aprendizado de máquina no browser."
  p5.play: "p5.play fornece funções de sprites, animações, entradas e colisões para jogos e aplicações."
  p5.particle: "Os objetos de partícula e fonte podem ser usados para criar efeitos baseados em dados que são definidas por estruturas de usuários ou JSON e funções desenhadas por usuários."
  p5.Riso: "p5.Riso é uma biblioteca para gerar arquivos adequados para impressão Risograph. Ajuda a transformar seus esboços em impressões coloridas."
  rita.js: "RiTa.js fornece um conjunto de objetos para processamento de linguagem natural para literatura generativa."
  RotatingKnobs: "Faça maçanetas que você pode girar com gráficos customizados e retorne um intervalo de valores."
  p5.scenemanager: "p5.SceneManager te ajjuda a criar esboços com multiplos estados e cenas . Cada cena é como um esboço dentro do esboço principal."
  p5.screenPosition: "Adiciona as funcionalidades screenX e screenY do Processing para P5js."
  p5.scribble: "Desenhe primitivos 2D com uma aparência de desenho. Criado por Janneck Wullschleger, baseado em um porte da biblioteca original Processing "
  p5.serial: "p5.serial permite comunicação serial entre dispositivos que suportam serial (RS-232) e esboços de p5 rodando no browser."
  Shape5: "Shape5 é uma biblioteca 2D de primitivos para alunos do ensino fundamental que estão aprendendo a programar pela primeira vez."
  p5.shape.js: "Uma biblioteca construída para adicionar mais formas simples para o p5.js."
  p5.speech: "p5.speech fornece acesso simples e claro para as API's de fala da Web e reconhecimento de fala, permitindo a fácil criação de esboços que podem falar e ouvir."
  p5.start2d.js: "extensão p5 para artes estáticas usando px, mm, cm ou polegadas"
  p5.tiledmap: "p5.tiledmap fornece funções de desenho e ajuda para incluir mapas nos seus esboços."
  p5.touchgui: "Uma biblioteca multi-touch e mouse GUI para p5.js."
  tramontana: "Tramontana é uma plataforma para facilmente utilizar diversos dispositivos (iOS, Android, tramontana Board, ...) para criar ambientes interativos, espaços interativos ou apenas prototipar experiências em escala e espaço."
  vida: "Vida é uma biblioteca simples que adiciona detecção de movimentos em câmera (ou vídeo) e funcionalidade de rastreamento de blob para p5js."
  p5.voronoi: "p5.voronoi fornece um conjunto de ferramentas para desenhar e utilizar diagramas de voronoi em p5js."
  p5.3D: "Textos e imagens 3D com WebGL."
  using-a-library-title: "Usando uma Biblioteca"
  using-a-library1: "Uma biblioteca de p5.js pode ser qualquer código JavaScript que extende ou adiciona às funcionalidades principais do p5.js. Existem duas categorias de bibliotecas. Bibliotecas Principais ("
  using-a-library3: ") são parte da distribuição do p5,js, enquanto bibliotecas contribuídas são desenvolvidas, mantidas e de propriedade de membros da comunidade p5.js."
  using-a-library4: "Para incluir bibliotecas em seus esboços, referencie ele no seu arquivo HTML, dps de referenciar no p5.js. Um exemplo de arquivo HTML pode parecer com isso:"
  create-your-own-title: "Crie o Seu"
  create-your-own1: "bibliotecas criadas por outros são bem vindas ao p5.js! Veja o"
  create-your-own2: "tutorial de bibliotecas"
  create-your-own3: "para mais especificações sobre como criar uma."
  create-your-own4: "Se você criou uma biblioteca e gostaria de incluí-la nessa página, preencha esse formulário!"

community:
  community-title: "Community"
  community-statement-title: "p5.js Community Statement"
  community-statement1: "p5.js is a community interested in exploring the creation of art and design with technology."
  community-statement2: "We are a community of, and in solidarity with, people from every gender identity and expression, sexual orientation, race, ethnicity, language, neuro-type, size, ability, class, religion, culture, subculture, political opinion, age, skill level, occupation, and background. We acknowledge that not everyone has the time, financial means, or capacity to actively participate, but we recognize and encourage involvement of all kinds. We facilitate and foster access and empowerment. We are all learners."
  community-statement3: "We like these hashtags: #noCodeSnobs (because we value community over efficiency), #newKidLove (because we all started somewhere), #unassumeCore (because we don't assume knowledge), and #BlackLivesMatter (because of course)."
  in-practice-title: "In practice:"
  in-practice1: " We are not code snobs. We do not assume knowledge or imply there are things that somebody should know. "
  in-practice2: "We insist on actively engaging with requests for feedback regardless of their complexity."
  in-practice3: "We welcome newcomers and prioritize the education of others. We strive to approach all tasks with the enthusiasm of a newcomer. Because we believe that newcomers are just as valuable in this effort as experts."
  in-practice4: "We consistently make the effort to actively recognize and validate multiple types of contributions."
  in-practice5: "We are always willing to offer help or guidance."
  in-times-conflict-title: "In times of conflict:"
  in-times-conflict1: "We listen."
  in-times-conflict2: "We clearly communicate while acknowledging other's feelings."
  in-times-conflict3: "We admit when we're wrong, apologize, and accept responsibility for our actions."
  in-times-conflict4: "We are continuously seeking to improve ourselves and our community."
  in-times-conflict5: "We keep our community respectful and open."
  in-times-conflict6: "We make everyone feel heard."
  in-times-conflict7: "We are mindful and kind in our interactions."
  in-the-future-title: "In the future:"
  in-the-future1: "The future is now."
  sharing-title: "Sharing"
  sharing1: "This statement is licensed under a "
  sharing2: "Creative Commons license"
  sharing3: ". Please feel free to share and remix with attribution."

  contribute-title: "Contribute"
  contribute1: "Our community is always looking for enthusiasts to help in all different ways."
  develop-title: "Develop."
  develop1: "GitHub"
  develop2: " is the main place where code is collected, issues are documented, and discussions about code are had. Check out the "
  develop3: " development tutorial"
  develop4: " to get started, or "
  develop5: "create your own library."
  document-title: "Document."
  document1: " Everyone loves documentation. Help is needed "
  document2: "porting examples"
  document3: ", and"
  document4: " adding documentation"
  document5: ", and creating tutorials."
  teach-title: "Teach."
  teach1: " Teach a workshop, a class, a friend, a collaborator! Tag @p5xjs on Twitter and we will do our best to share what you're doing."
  create-title: "Create."
  create1: " p5.js is looking for designers, artists, coders, programmers to bring your creative and amazing work to show on the front page and inspire other people. Submit your work to "
  create2: "hello@p5js.org"
  create3: "."
  donate-title: "Donate."
  donate1: " p5.js is free and open source and made by artists. Help support the development of p5.js through a donation to the "
  donate2: "Processing Foundation"
  donate3: "."
  contributors-conference-title: "p5.js Contributors Conference"
  contributors-conference1: "While most work happens online, we also convene IRL. We've had two contributors conferences held at the "
  contributors-conference2: "at Carnegie Mellon University in Pittsburgh, PA. Artists, designers, developers, educators, and got together to advance the p5.js project."
  participants-title: "Participants"
  support-title: "Support"
  support1: "Our contributor conference took place at the"
  support2: "at Carnegie Mellon University, an academic laboratory for atypical, anti-disciplinary, and inter-institutional research at the intersections of arts, science, technology, and culture."
  support3: "This event was made possible by a grant from the"
  support4: "and generous support from the"
  support5: "and"
  support6: "Thank you!"
  mailing-list-title: "Mailing list"
  mailing-list-1: "Enter your email address to receive occasional updates from the Processing Foundation."

  2015contributors-conference-title: "Contributors Conference 2015"
  2015contributors-conference-date: "May 25-31"
  2015contributors-conference1: "A group of approximately 30 participants gathered spent a week at the "
  2015contributors-conference2: ", advancing the code, documentation, and community outreach tools of the p5.js programming environment. Participants came from as far away as Hong Kong, Seattle, Los Angeles, Boston and New York. Most were working professionals in the fields of creative technology, interaction design, and new-media arts, but the group also included a half-dozen undergraduate and graduate students from Carnegie Mellon’s Schools of Art and Architecture."
  2015contributors-conference3: "Photos by Taeyoon Choi"
  2015contributors-conference-diversity-title: "Diversity"
  2015contributors-conference-diversity1: "Alongside technical development, one of the main focuses of this conference was outreach, community, and diversity. The conference began with a panel"
  2015contributors-conference-diversity2: "Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and the Internet"
  2015contributors-conference-diversity3: ". "
  2015contributors-conference-diversity4: "Organized by"
  2015contributors-conference-diversity5: "and"
  2015contributors-conference-diversity6: ", "
  2015contributors-conference-diversity7: "the panel took place Tuesday, 25 May 2015 in Kresge Auditorium at Carnegie Mellon University. Speakers included"
  2015contributors-conference-diversity8: "and"
  2015contributors-conference-diversity9: "."
  2015cc_1: "Diverse group of participants smile and make a p5 sign with their hands"
  2015cc_2: "Participants jump, smile and throw their hands in the air on a green lawn"
  2015cc_3: "Woman presenting the p5.js community statement from her laptop"
  2015cc_4: "Woman expressively speaks into a microphone while two male collaborators look on"
  2015cc_5: "Participants attentively smile and listen to a presentation"
  2015cc_6: "Woman reads about p5.js into a microphone to three female students"
  2015cc_7: "Participants sit in a circle around a white board with sticky notes on it while a female student speaks into a microphone"
  2015cc_8: "Participants sit around a table looking at each others laptops and compare code "
  2015cc_9: "Whiteboard with different colored sticky and written notes about programming "
  2015cc_10: "Woman speaking into a microphone about valuing different skill sets while a group of participants with laptops look at her powerpoint in a classroom"
  2015cc_11: "Woman speaks at a podium in an auditorium while three participants sit on the stage and another three are skyping in on the stage screen"
  2015cc_12: "Overhead view of a classroom with participants working on their laptops"
  2015cc_13: "Five people having a discussion in a circle"
  2015cc_14: "Five people in a circle with their laptops sharing their notes"
  2015cc_15: "Man in a classroom with a microphone speaking out to a group of participants"
  2019contributors-conference-title: "Contributors Conference 2019"
  2019contributors-conference-date: "August 13-18"
  2019contributors-conference1: "An interdisciplinary group of 35 participants gathered at the "
  2019contributors-conference2: ", advancing the code, documentation, and community outreach tools and exploring the current landscape of the p5.js programming environment. Comprising a diverse range of participants within the fields of creative technology, interaction design, and new media arts, the conference was aimed at fostering dialogue through a multidisciplinary lens. Working groups focused on several topic areas: Access; Music and Code in Performance; Landscape of Creative Tech; and Internationalization."
  2019contributors-conference3: "Videos by Qianqian Ye"
  2019contributors-conference4: "Photos by Jacquelyn Johnson"
  outputs: "Outputs"
  output1: ". An implementation of highly flexible triangle, square, hexagon, and octagon girds for p5.js. Created by Aren Davey."
  output2: ". A set of template files for building a multi-device, multiplayer game where multiple clients can connect to a specified host page. Created by L05."
  output3: "Experiments using"
  output3-1: ", testing early implementations of softCompile, OSC interfacing and added connectivity with demo for MIDI setup. A p5.js collaborative live-coding vj environment! Created by Ted Davis."
  output4: "A panel on Blackness and Gender in Virtual Space led by American Artist, with shawné michaelain holloway and LaJuné McMillian."
  output5: "Workshops led by Everest Pipkin and Jon Chambers."
  output6: "A prototype of a "
  output6-1: "notebook interface for p5.js."
  output6-2: "Created by Allison Parrish."
  output7: "New art installations by Stalgia Grigg, LaJuné McMillian, Aatish Bhatia, and Jon Chambers."
  output8: "p5.js Global Contributor's Toolkit."
  output8-1: "Created by Aarón Montoya-Moraga, Kenneth Lim, Guillermo Montecinos, Qianqian Ye,  Dorothy R. Santos, and Yasheng She."
  output9: "How to write non-violent creative code."
  output9-1: " A zine led by Olivia Ross."
  output10: "An overhaul of the p5.js website for accessibility. Including updates for screen reader accessibility, and improvements to the home, download, getting started, and reference pages. With contributions from Claire Kearney-Volpe, Sina Bahram, Kate Hollenbach, Olivia Ross, Luis Morales-Navarro, Lauren McCarthy, and Evelyn Masso."
  output11: "Collaborative performances by Luisa Pereira, Jun Shern Chan, Shefali Nayak, Sona Lee, Ted Davis, and Carlos Garcia."
  output12: "A performance by Natalie Braginsky."
  output13: "A design of the p5.js library system for the p5 Editor. Created by Cassie Tarakajian and Luca Damasco."
  output14: "Prototypes connecting p5 to other libraries. Created by Alex Yixuan Xu and Lauren Valley."
  output15: "A closing campfire circle led by Golan Levin."
  2019cc_1: "Man at a podium giving a presentation to the group"
  2019cc_2: "Participants sitting at a long table having lunch and a discussion"
  2019cc_3: "Participants in a classroom, some working on their laptops, others talking "
  2019cc_4: "Classroom of participants working on their laptops"
  2019cc_5: "Participants in a meeting in a dark classroom"
  2019cc_6: "Woman giving presentation in a classroom of diverse participants"
  2019cc_7: "Participants conversing in a busy classroom"
  2019cc_8: "Woman with microphone speaking to fellow participants in a classroom"
  2019cc_9: "Participant speaks at a podium in front of projected text about the problem with anonymyzing data"
  2019cc_10: "Person with a microphone speaking to fellow participants in front of text that reads p5.js will not add any new features except those that increase access"
  2019cc_11: "Woman speaking into a microphone talking to fellow participants "
  2019cc_12: "A man with a microphone speaking to fellow participants"
  2019cc_13: "Participants sit in a classroom towards the speakers listening intently"
  2019cc_14: "Classroom of participants facing a speaker listen intently "
  2019cc_15: "Woman with microphone speaking to fellow participants with the text sacred boundaries in the projection behind her"
  2019cc_16: "Overhead view of participants listening to a panel of people with an image of a 3d rendered man on it "
  2019cc_17: "Participants sit around a table with their laptops and observe code on a screen"
  2019cc_18: "Woman sitting next to a lifesize teddy bear works on her laptop"
  2019cc_19: "Participants standing outside smiling"
  2019cc_20: "Four participants standing in a circle conversing"
  2019cc_21: "Participants sitting outside eating lunch together"
  2019cc_22: "Participants sitting around a large U shaped table looking towards the front of the classroom"
  2019cc_23: "Man sitting in front of the classroom speaking energetically into a microphone"
  2019cc_24: "Group photo of participants smiling enthusiastically with their hands in the air"
  2019cc_25: "Group of people sit around campfire made from four LCD monitors."

books:
  books-title: "Livros"

examples:
  Examples: "Exemplos"
  back-examples: "De volta aos Exemplos"
  Structure: "Estrutura"
  Form: "Formulário"
  Data: "Dados"
  Arrays: "Arrays"
  Control: "Controle"
  Image: "Imagem"
  Color: "Cor"
  Math: "Matemática"
  Simulate: "Simule"
  Interaction: "Interação"
  Objects: "Objetos"
  Lights: "Luzes"
  Motion: "Movimento"
  Instance_Mode: "Modo Instância"
  Dom: "DOM"
  Drawing: "Desenhando"
  Transform: "Transfrome"
  Typography: "Tipografia"
  3D: "3D"
  Input: "Entrada"
  Advanced_Data: "Dados Avançados"
  Sound: "Som"
  Mobile: "Dispositivos Móveis"
  Hello_P5: "Olá p5"

reference:
  Reference: "Referência"
